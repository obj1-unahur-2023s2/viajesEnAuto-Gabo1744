import remiseras.*
import clientes.*

describe "testing de roxana"{
	
	test "viaje de Ludmila con 10 kms"{
		assert.equals(180,roxana.valorDeViaje(ludmila,10))
	}
	
	test "viaje de AnaMaria con 10 kms"{
		assert.equals(300,roxana.valorDeViaje(anaMaria,10))
	}
	
	test "viaje de Teresa con 10 kms"{
		assert.equals(220,roxana.valorDeViaje(teresa,10))
	}
	
	test "viaje de Ludmila con 2 kms"{
		assert.equals(36,roxana.valorDeViaje(ludmila,2))
	}
	
	test "viaje de AnaMaria con 2 kms"{
		assert.equals(60,roxana.valorDeViaje(anaMaria,2))
	}
	
	test "viaje de Teresa con 2 kms"{
		assert.equals(44,roxana.valorDeViaje(teresa,2))
	}
}

describe "testing de Gabriela"{
	
	test "viaje de Ludmila con 10 kms"{
		assert.equals(216,gabriela.valorDeViaje(ludmila,10))
	}
	
	test "viaje de AnaMaria con 10 kms"{
		assert.equals(360,gabriela.valorDeViaje(anaMaria,10))
	}
	
	test "viaje de Teresa con 10 kms"{
		assert.equals(264,gabriela.valorDeViaje(teresa,10))
	}
	
	test "viaje de Ludmila con 2 kms"{
		assert.equals(43.20,gabriela.valorDeViaje(ludmila,2))
	}
	
	test "viaje de AnaMaria con 2 kms"{
		assert.equals(72,gabriela.valorDeViaje(anaMaria,2))
	}
	
	test "viaje de Teresa con 2 kms"{
		assert.equals(52.80,gabriela.valorDeViaje(teresa,2))
	}
}

describe "testing de Mariela"{
	
	test "viaje de Ludmila con 10 kms"{
		assert.equals(180,mariela.valorDeViaje(ludmila,10))
	}
	
	test "viaje de AnaMaria con 10 kms"{
		assert.equals(300,mariela.valorDeViaje(anaMaria,10))
	}
	
	test "viaje de Teresa con 10 kms"{
		assert.equals(220,mariela.valorDeViaje(teresa,10))
	}
	
	test "viaje de Ludmila con 2 kms"{
		assert.equals(50,mariela.valorDeViaje(ludmila,2))
	}
	
	test "viaje de AnaMaria con 2 kms"{
		assert.equals(60,mariela.valorDeViaje(anaMaria,2))
	}
	
	test "viaje de Teresa con 2 kms"{
		assert.equals(50,mariela.valorDeViaje(teresa,2))
	}
}

describe "testing de Juana"{
	
	test "viaje de Ludmila con 10 kms"{
		assert.equals(200,juana.valorDeViaje(ludmila,10))
	}
	
	test "viaje de AnaMaria con 10 kms"{
		assert.equals(200,juana.valorDeViaje(anaMaria,10))
	}
	
	test "viaje de Teresa con 10 kms"{
		assert.equals(200,juana.valorDeViaje(teresa,10))
	}
	
	test "viaje de Ludmila con 2 kms"{
		assert.equals(100,juana.valorDeViaje(ludmila,2))
	}
	
	test "viaje de AnaMaria con 2 kms"{
		assert.equals(100,juana.valorDeViaje(anaMaria,2))
	}
	
	test "viaje de Teresa con 2 kms"{
		assert.equals(100,juana.valorDeViaje(teresa,2))
	}
}

describe "testing de lucia"{
	
	test "No se puede reemplazara si misma"{
		assert.throwsExceptionWithMessage("No se puede reemplazar a si mismo",{lucia.estaReemplazando(lucia)})
	}
	
	test "puede reemplazar a roxana"{
		assert.doesNotThrowException({lucia.estaReemplazando(roxana)})
	}
	
	test "reemplazo a roxana llevando a Ludmila"{
		lucia.estaReemplazando(roxana)
		assert.equals(180,roxana.valorDeViaje(ludmila,10))
	}
}